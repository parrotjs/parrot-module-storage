/**
 * parrot-boilerplate - Provides a uniformly API for manage localStorage and SessionStorage.
 * @version v0.12.16
 * @link    https://github.com/parrotjs/parrot-module-storage
 * @author  Kiko Beats (https://github.com/Kikobeats)
 * @license MIT
 */
(function(){!function(){var n,r,e,t,s,o,i,u,a;return s=require("fn-partial"),e=function(){var n,e;for(n in localStorage)parrot.local[n]=s(r,"local",n);e=[];for(n in sessionStorage)e.push(parrot.session[n]=s(r,"session",n));return e}(),a=function(n){return"local"===n?localStorage:sessionStorage},r=function(n,r){var e,t;e=a(n).getItem(r);try{return e=JSON.parse(e)}catch(s){return t=s,e}},n=function(n,e,t){return"string"!=typeof t&&(t=JSON.stringify(t)),a(n).setItem(e,t),parrot[n][e]=s(r,n,e)},o=function(n,r){return delete parrot[n][r],a(n).removeItem(r)},i=function(n){var r;for(r in a(n))delete parrot[n][r];return a(n).clear()},u=function(n){return a(n).length},t=function(n,r){return null!=a(n)[r]},parrot.local={add:function(r,e){return n("local",r,e),this},remove:function(){var n,r,e;for(r=0,e=arguments.length;e>r;r++)n=arguments[r],o("local",n);return this},removeAll:function(){return i("local"),this},size:function(){return u("local")},isAvailable:function(n){return t("local",n)}},parrot.session={get:function(){return r("session","session")},add:function(){var r,e;return 1===arguments.length?(e="session",r=arguments[0]):(e=arguments[0],r=arguments[1]),n("session",e,r),this},remove:function(){var n,r,e;if(0===arguments.length)o("session","session");else for(r=0,e=arguments.length;e>r;r++)n=arguments[r],o("session",n);return this},removeAll:function(){return i("session"),this},size:function(){return u("session")},isAvailable:function(){var n;return n=0===arguments.length?"session":arguments[0],t("session",n)}}}()}).call(this);