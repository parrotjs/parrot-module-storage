/**
 * parrot-boilerplate - Storage Management for Parrot
 * @version v0.12.14
 * @link    https://github.com/parrotjs/parrot-module-storage
 * @author  Kiko Beats (https://github.com/Kikobeats)
 * @license MIT
 */
(function(){!function(){var r,n,t,e,s,o,a,i;return t=function(){var r,t;for(r in localStorage)parrot.local[r]=parrot._partial(n,"local",r);t=[];for(r in sessionStorage)t.push(parrot.session[r]=parrot._partial(n,"session",r));return t}(),i=function(r){return"local"===r?localStorage:sessionStorage},n=function(r,n){var t,e;t=i(r).getItem(n);try{return t=JSON.parse(t)}catch(s){return e=s,t}},r=function(r,t,e){return"string"!=typeof e&&(e=JSON.stringify(e)),i(r).setItem(t,e),parrot[r][t]=parrot._partial(n,r,t)},s=function(r,n){return delete parrot[r][n],i(r).removeItem(n)},o=function(r){var n;for(n in i(r))delete parrot[r][n];return i(r).clear()},a=function(r){return i(r).length},e=function(r,n){return null!=i(r)[n]},parrot.local={add:function(n,t){return r("local",n,t),this},remove:function(){var r,n,t;for(n=0,t=arguments.length;t>n;n++)r=arguments[n],s("local",r);return this},removeAll:function(){return o("local"),this},size:function(){return a("local")},isAvailable:function(r){return e("local",r)}},parrot.session={get:function(){return n("session","session")},add:function(){var n,t;return 1===arguments.length?(t="session",n=arguments[0]):(t=arguments[0],n=arguments[1]),r("session",t,n),this},remove:function(){var r,n,t;if(0===arguments.length)s("session","session");else for(n=0,t=arguments.length;t>n;n++)r=arguments[n],s("session",r);return this},removeAll:function(){return o("session"),this},size:function(){return a("session")},isAvailable:function(){var r;return r=0===arguments.length?"session":arguments[0],e("session",r)}}}()}).call(this);